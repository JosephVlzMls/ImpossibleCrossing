INCLUDE C:GM.LIB
INCLUDE C:DRAW.LIB
INCLUDE C:MESSAGE.LIB
INCLUDE C:SELECTOR.LIB
INCLUDE C:BLOCK.LIB
INCLUDE C:PLAYER.LIB
INCLUDE C:LINEBLK.LIB
INCLUDE C:IO.LIB

.MODEL SMALL
.STACK  100

.DATA
MSG1 MESSAGE < 17, 08, 'JUGAR$', 2 >
MSG2 MESSAGE < 17, 12, 'SALIR$', 4 >
MSG3 MESSAGE < 08, 02, '> IMPOSSIBLE CROSSING <$', 15 >
MSG4 MESSAGE < 04, 22, 'PRESIONA ESPACIO PARA CONTINUAR$', 8 >
MSG5 MESSAGE < 16, 8, 'NIVEL  $', 15 >
MSG6 MESSAGE < 8, 22, 'PRESIONA CUALQUIER TECLA$', 8 >
SLC1 SELECTOR < 117, 57, 80, 22, 2, 14, 1 >
LINE_BLK0 LINE_BLOCKS < 027, 1, 00 >
LINE_BLK1 LINE_BLOCKS < 062, 1, 00 >
LINE_BLK2 LINE_BLOCKS < 097, 1, 10 >
LINE_BLK3 LINE_BLOCKS < 132, 1, 20 >
LINE_BLK4 LINE_BLOCKS < 167, 1, 40 >
P1 PLAYER < 150, 180 >
LEVEL DB 0
SPEED_PLAYER DW 0
SPEED_BLOCKS DW 0
KEY DB 0h

.CODE
MAIN PROC FAR                 
    PUSH DS
    MOV AX, 0h
    PUSH AX
    MOV AX, @DATA
    MOV DS, AX
    
    START_GRAPHIC_MODE    
    
    INICIO:
    CALL MENU_PRINCIPAL    
    CMP SLC1.SLC_VALUE, 1h
    JE JUGAR
    JMP SALIR
    JUGAR:
        MOV AX, 0h
        MOV AL, 1h
        MOV LEVEL, AL
        CONFIGURAR_NIVEL:
            MOV LINE_BLK0.LNB_COLOR, AL
            MOV LINE_BLK1.LNB_COLOR, AL
            MOV LINE_BLK2.LNB_COLOR, AL
            MOV LINE_BLK3.LNB_COLOR, AL
            MOV LINE_BLK4.LNB_COLOR, AL
            MOV SPEED_BLOCKS, AX
            ADD AX, 1h
            MOV SPEED_PLAYER, AX
            CALL COMENZAR_JUEGO
            CMP AH, 1h
            JE NIVEL_SUPERADO
            JMP INICIO
            NIVEL_SUPERADO:
            MOV AX, 0h
            MOV AL, LEVEL
            ADD AL, 1h
            MOV LEVEL, AL
            JMP CONFIGURAR_NIVEL
    SALIR:
        FINISH_GRAPHIC_MODE
    
    RET
MAIN ENDP    

MENU_PRINCIPAL PROC
    PAINT_BACKGROUND 0 
    SHOW_MESSAGE MSG1
    SHOW_MESSAGE MSG2
    SHOW_MESSAGE MSG3
    SHOW_MESSAGE MSG4
    SHOW_SELECTOR SLC1

    JMP LEER_TECLA_M
        
    MOVER_SELECTOR_ABAJO_M:
        MOVE_DOWN_SELECTOR SLC1, 31
        JMP LEER_TECLA_M
        
    MOVER_SELECTOR_ARRIBA_M:
        MOVE_UP_SELECTOR SLC1, 31
        JMP LEER_TECLA_M  

    LEER_TECLA_M:    
    READ_KEY AH    
    CMP_FLECHA_ARRIBA_M:
        CMP AH, 48h
        JE FLECHA_ARRIBA_M
        JMP CMP_FLECHA_ABAJO_M
        FLECHA_ARRIBA_M:   
            CMP SLC1.SLC_VALUE, 2h
            JE ETIQUETA1_M
            JMP MOVER_SELECTOR_ABAJO_M
            JMP LEER_TECLA_M
            ETIQUETA1_M: 
            JMP MOVER_SELECTOR_ARRIBA_M    
            JMP LEER_TECLA_M
    CMP_FLECHA_ABAJO_M:
        CMP AH, 50h
        JE FLECHA_ABAJO_M
        JMP CMP_ESPACIO_M
        FLECHA_ABAJO_M:
            CMP SLC1.SLC_VALUE, 2h
            JE ETIQUETA2_M
            JMP MOVER_SELECTOR_ABAJO_M  
            JMP LEER_TECLA_M
            ETIQUETA2_M:
            JMP MOVER_SELECTOR_ARRIBA_M     
            JMP LEER_TECLA_M 
    CMP_ESPACIO_M:
        CMP AH, 39h
        JE ESPACIO_M
        JMP LEER_TECLA_M
        ESPACIO_M:
    RET
MENU_PRINCIPAL ENDP

COMENZAR_JUEGO PROC
    PAINT_BACKGROUND 0
    
    DRAW_HOLLOW_RECTANGLE 117, 57, 82, 22, 2, LEVEL
    SHOW_MESSAGE MSG5
    PRINT_DB LEVEL
    SHOW_MESSAGE MSG6
    READ_KEY CL
    
    PAINT_BACKGROUND 0
    
    INIT_LINE_BLOCKS LINE_BLK0
    INIT_LINE_BLOCKS LINE_BLK1
    INIT_LINE_BLOCKS LINE_BLK2
    INIT_LINE_BLOCKS LINE_BLK3
    INIT_LINE_BLOCKS LINE_BLK4  
    SHOW_LINE_BLOCKS LINE_BLK0
    SHOW_LINE_BLOCKS LINE_BLK1
    SHOW_LINE_BLOCKS LINE_BLK2
    SHOW_LINE_BLOCKS LINE_BLK3
    SHOW_LINE_BLOCKS LINE_BLK4
    
    MOVE_PLAYER P1, 150, 180
    SHOW_PLAYER P1
        
    MOV KEY, AH
    
    LEER_TECLA_J:            
    DRAW_HOLLOW_RECTANGLE 0, 0, 320, 200, 2, LEVEL
    ADD_DESPLASING_LINE_BLOCKS LINE_BLK0, SPEED_BLOCKS  
    SUB_DESPLASING_LINE_BLOCKS LINE_BLK1, SPEED_BLOCKS  
    ADD_DESPLASING_LINE_BLOCKS LINE_BLK2, SPEED_BLOCKS  
    SUB_DESPLASING_LINE_BLOCKS LINE_BLK3, SPEED_BLOCKS  
    ADD_DESPLASING_LINE_BLOCKS LINE_BLK4, SPEED_BLOCKS 
    
    CMP P1.PLY_Y, 7
    JG CMP_LEFT
    JMP GAME_WIN
    
    CMP_LEFT:
    CMP P1.PLY_X, 1
    JG CMP_RIGHT
    JMP GAME_OVER
    
    CMP_RIGHT:
    CMP P1.PLY_X, 309
    JL CMP_DOWN
    JMP GAME_OVER
    
    CMP_DOWN:
    CMP P1.PLY_Y, 183
    JL CMP_KNOCK_0
    JMP GAME_OVER
    
    CMP_KNOCK_0:
    CMP_KNOCK LINE_BLK0, P1, AL
    CMP AL, 0h
    JE CMP_KNOCK_1
    JMP GAME_OVER
    
    CMP_KNOCK_1:
    CMP_KNOCK LINE_BLK1, P1, AL
    CMP AL, 0h
    JE CMP_KNOCK_2
    JMP GAME_OVER
    
    CMP_KNOCK_2:
    CMP_KNOCK LINE_BLK2, P1, AL
    CMP AL, 0h
    JE CMP_KNOCK_3
    JMP GAME_OVER
    
    CMP_KNOCK_3:
    CMP_KNOCK LINE_BLK3, P1, AL
    CMP AL, 0h
    JE CMP_KNOCK_4
    JMP GAME_OVER 
    
    CMP_KNOCK_4:
    CMP_KNOCK LINE_BLK4 P1, AL
    CMP AL, 0h
    JE CONTINUE
    JMP GAME_OVER   
    
    CONTINUE:        
    KEY_PRESSED AH
    CMP AH, 0h
    JNE CMP_KEY_VALID_W
    JMP CMP_KEY_W
    CMP_KEY_VALID_W:
        CMP AH, 'W'
        JNE CMP_KEY_VALID_S 
        JMP SET_KEY
    CMP_KEY_VALID_S:
        CMP AH, 'S'
        JNE CMP_KEY_VALID_A 
        JMP SET_KEY
    CMP_KEY_VALID_A:
        CMP AH, 'A'
        JNE CMP_KEY_VALID_D 
        JMP SET_KEY
    CMP_KEY_VALID_D:
        CMP AH, 'D'
        JNE CMP_KEY_VALID_ESPACIO 
        JMP SET_KEY
    CMP_KEY_VALID_ESPACIO:
        CMP AH, ' '
        JNE CMP_KEY_W 
    
    SET_KEY:
        MOV KEY, AH
    
    CMP_KEY_W:
        CMP KEY, 'W'
        JE KEY_W
        JMP CMP_KEY_S
        KEY_W:
            MOVE_UP_PLAYER P1, SPEED_PLAYER
            JMP LEER_TECLA_J
            
    CMP_KEY_S:
        CMP KEY, 'S'
        JE KEY_S
        JMP CMP_KEY_A
        KEY_S:
            MOVE_DOWN_PLAYER P1, SPEED_PLAYER
            JMP LEER_TECLA_J
    
    CMP_KEY_A:
        CMP KEY, 'A'
        JE KEY_A
        JMP CMP_KEY_D
        KEY_A:
            MOVE_LEFT_PLAYER P1, SPEED_PLAYER
            JMP LEER_TECLA_J
            
    CMP_KEY_D:
        CMP KEY, 'D'
        JE KEY_D
        JMP LEER_TECLA_J
        KEY_D:
            MOVE_RIGHT_PLAYER P1, SPEED_PLAYER
            JMP LEER_TECLA_J
        
    GAME_WIN:    
        MOV AH, 1h
        JMP FINISH_LEVEL
    GAME_OVER:
        MOV AH, 0h
    FINISH_LEVEL:
    RET
COMENZAR_JUEGO ENDP

END MAIN