LINE_BLOCKS STRUC
    LNB_Y DW 0h
    LNB_COLOR DB 0h
    LNB_DISPLACEMENT DW 0h
    LNB_BLOCK1 BLOCK < 0, 0, 00, 8, 0 >
    LNB_BLOCK2 BLOCK < 0, 0, 29, 8, 0 >
    LNB_BLOCK3 BLOCK < 0, 0, 29, 8, 0 >
    LNB_BLOCK4 BLOCK < 0, 0, 29, 8, 0 >
    LNB_BLOCK5 BLOCK < 0, 0, 29, 8, 0 >
    LNB_BLOCK6 BLOCK < 0, 0, 00, 8, 0 >
LINE_BLOCKS ENDS

INIT_LINE_BLOCKS MACRO ARG0
    LOCAL TAG0, TAG1, TAG2
    PUSH AX
    MOV AX, ARG0.LNB_Y
    MOV ARG0.LNB_BLOCK1.BLK_Y, AX
    MOV ARG0.LNB_BLOCK2.BLK_Y, AX
    MOV ARG0.LNB_BLOCK3.BLK_Y, AX
    MOV ARG0.LNB_BLOCK4.BLK_Y, AX
    MOV ARG0.LNB_BLOCK5.BLK_Y, AX
    MOV ARG0.LNB_BLOCK6.BLK_Y, AX
    MOV AH, ARG0.LNB_COLOR
    MOV ARG0.LNB_BLOCK1.BLK_COLOR, AH
    MOV ARG0.LNB_BLOCK2.BLK_COLOR, AH
    MOV ARG0.LNB_BLOCK3.BLK_COLOR, AH
    MOV ARG0.LNB_BLOCK4.BLK_COLOR, AH
    MOV ARG0.LNB_BLOCK5.BLK_COLOR, AH
    MOV ARG0.LNB_BLOCK6.BLK_COLOR, AH    
    CMP ARG0.LNB_DISPLACEMENT, 29
    JLE TAG0
    JMP TAG1
    TAG0:
    MOV AX, 29
    MOV ARG0.LNB_BLOCK1.BLK_LONG, AX
    SUB AX, ARG0.LNB_DISPLACEMENT
    MOV ARG0.LNB_BLOCK6.BLK_LONG, AX        
    MOV AX, ARG0.LNB_DISPLACEMENT
    MOV ARG0.LNB_BLOCK1.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK2.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK3.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK4.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK5.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK6.BLK_X, AX    
    JMP TAG2
    TAG1:
    MOV AX, ARG0.LNB_DISPLACEMENT
    SUB AX, 29
    MOV ARG0.LNB_BLOCK1.BLK_LONG, AX
    MOV ARG0.LNB_BLOCK6.BLK_LONG, 29    
    MOV AX, 0
    MOV ARG0.LNB_BLOCK1.BLK_X, AX
    ADD AX, ARG0.LNB_BLOCK1.BLK_LONG
    ADD AX, 29
    MOV ARG0.LNB_BLOCK2.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK3.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK4.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK5.BLK_X, AX
    ADD AX, 58
    MOV ARG0.LNB_BLOCK6.BLK_X, AX       
    TAG2:    
    POP AX
ENDM

SHOW_LINE_BLOCKS MACRO ARG0
    SHOW_BLOCK ARG0.LNB_BLOCK1
    SHOW_BLOCK ARG0.LNB_BLOCK2
    SHOW_BLOCK ARG0.LNB_BLOCK3
    SHOW_BLOCK ARG0.LNB_BLOCK4
    SHOW_BLOCK ARG0.LNB_BLOCK5
    SHOW_BLOCK ARG0.LNB_BLOCK6
ENDM

DELETE_LINE_BLOCKS MACRO ARG0
    DELETE_BLOCK ARG0.LNB_BLOCK1
    DELETE_BLOCK ARG0.LNB_BLOCK2
    DELETE_BLOCK ARG0.LNB_BLOCK3
    DELETE_BLOCK ARG0.LNB_BLOCK4
    DELETE_BLOCK ARG0.LNB_BLOCK5
    DELETE_BLOCK ARG0.LNB_BLOCK6
ENDM

SET_DISPLACEMENT_LINE_BLOCKS MACRO ARG0, ARG1
    LOCAL TAG0, TAG1, TAG2
    PUSH AX
    MOV AX, ARG1
    TAG0:
    CMP AX, 58
    JGE TAG1
    JMP TAG2
    TAG1:
    SUB AX, 58
    JMP TAG0
    TAG2:
    MOV ARG0.LNB_DISPLACEMENT, AX    
    INIT_LINE_BLOCKS ARG0
    POP AX
ENDM

ADD_DESPLASING_LINE_BLOCKS MACRO ARG0, ARG1
    PUSH AX
    DELETE_LINE_BLOCKS ARG0
    MOV AX, ARG0.LNB_DISPLACEMENT
    ADD AX, ARG1
    SET_DISPLACEMENT_LINE_BLOCKS ARG0, AX
    SHOW_LINE_BLOCKS ARG0
    POP AX
ENDM

SUB_DESPLASING_LINE_BLOCKS MACRO ARG0, ARG1
    LOCAL TAG0, TAG1, TAG2
    PUSH AX
    DELETE_LINE_BLOCKS ARG0
    MOV AX, ARG0.LNB_DISPLACEMENT
    CMP AX, ARG1
    JGE TAG0
    JMP TAG1
    TAG0:
    SUB AX, ARG1
    JMP TAG2
    TAG1:
    MOV AX, 58
    SUB AX, ARG0.LNB_DISPLACEMENT
    SUB AX, ARG1
    TAG2:
    SET_DISPLACEMENT_LINE_BLOCKS ARG0, AX
    SHOW_LINE_BLOCKS ARG0
    POP AX
ENDM

CMP_KNOCK MACRO ARG0, ARG1, ARG2
    LOCAL TAG0, TAG1, TAG2, CMP_BLOCK1, CMP_BLOCK2, CMP_BLOCK3, CMP_BLOCK4, CMP_BLOCK5, CMP_BLOCK6, FALSE
    PUSH BP
    PUSH AX
    MOV BP, SP
    MOV AX, ARG0.LNB_Y
    SUB AX, 14
    CMP AX, ARG1.PLY_Y
    JLE TAG1
    MOV AL, 0h
    JMP TAG0
    TAG1:
    ADD AX, 21
    CMP AX, ARG1.PLY_Y
    JGE TAG2
    MOV AL, 0h
    JMP TAG0
    TAG2:    
    
    CMP_BLOCK1:
    MOV AX, ARG0.LNB_BLOCK1.BLK_X
    SUB AX, 9
    CMP AX, ARG1.PLY_X
    JG CMP_BLOCK2
    ADD AX , 8
    ADD AX, ARG0.LNB_BLOCK1.BLK_LONG
    CMP AX, ARG1.PLY_X
    JL CMP_BLOCK2
    MOV AL, 1h
    JMP TAG0
    
    CMP_BLOCK2:
    MOV AX, ARG0.LNB_BLOCK2.BLK_X
    SUB AX, 9
    CMP AX, ARG1.PLY_X
    JG CMP_BLOCK3
    ADD AX , 8
    ADD AX, ARG0.LNB_BLOCK2.BLK_LONG
    CMP AX, ARG1.PLY_X
    JL CMP_BLOCK3
    MOV AL, 1h
    JMP TAG0
    
    CMP_BLOCK3:
    MOV AX, ARG0.LNB_BLOCK3.BLK_X
    SUB AX, 9
    CMP AX, ARG1.PLY_X
    JG CMP_BLOCK4
    ADD AX , 8
    ADD AX, ARG0.LNB_BLOCK3.BLK_LONG
    CMP AX, ARG1.PLY_X
    JL CMP_BLOCK4
    MOV AL, 1h
    JMP TAG0
    
    CMP_BLOCK4:
    MOV AX, ARG0.LNB_BLOCK4.BLK_X
    SUB AX, 9
    CMP AX, ARG1.PLY_X
    JG CMP_BLOCK5
    ADD AX , 8
    ADD AX, ARG0.LNB_BLOCK4.BLK_LONG
    CMP AX, ARG1.PLY_X
    JL CMP_BLOCK5
    MOV AL, 1h
    JMP TAG0
    
    CMP_BLOCK5:
    MOV AX, ARG0.LNB_BLOCK5.BLK_X
    SUB AX, 9
    CMP AX, ARG1.PLY_X
    JG CMP_BLOCK6
    ADD AX , 8
    ADD AX, ARG0.LNB_BLOCK5.BLK_LONG
    CMP AX, ARG1.PLY_X
    JL CMP_BLOCK6
    MOV AL, 1h
    JMP TAG0
    
    CMP_BLOCK6:
    MOV AX, ARG0.LNB_BLOCK6.BLK_X
    SUB AX, 9
    CMP AX, ARG1.PLY_X
    JG FALSE
    ADD AX , 8
    ADD AX, ARG0.LNB_BLOCK6.BLK_LONG
    CMP AX, ARG1.PLY_X
    JL FALSE
    MOV AL, 1h
    JMP TAG0
        
    FALSE:
    MOV AL, 0h
        
    TAG0:    
    MOV [BP+2], AX
    POP AX
    MOV ARG2, BYTE PTR[BP+2]
    POP BP
ENDM